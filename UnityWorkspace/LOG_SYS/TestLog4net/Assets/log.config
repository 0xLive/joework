<?xml version="1.0" encoding="utf-8" ?>
<configuration>

  <configSections>
    <!--<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net-net-1.0"/>-->
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net"/>
  </configSections>

  <log4net>
    <!--
      根日志配置，所有日志，默认从此处继承
    -->
    <root>
      <!--取值范围[从低到高] ALL DEBUG INFO WARN RROR FATAL OFF-->
      <!--比如定义级别为INFO，则INFO级别向下的级别，比如DEBUG日志将不会被记录-->
      <!--如果没有定义LEVEL的值，则缺省为DEBUG-->
      <level value="ALL"/>
      <!--默认文件输出-->
      <appender-ref ref="RollingFileAppender"/>
    </root>

    <!--
      如果需要定制log则取消下列注释
    -->
    <!--
    <logger name="testApp.Logging">
      <level value="WARN"/>
      <level value="DEBUG"/>
    </logger>
    -->

    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">

      <!--日志文件名开头-->
      <file value="U3D_Run.log"/>

      <!--多线程时采用最小锁定-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>

      <!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
      <datePattern value="(yyyyMMdd)"/>
      
      <!--是否追加到文件,默认为true，通常无需设置-->
      <appendToFile value="true"/>

      <!--变换的形式为日期，这种情况下每天只有一个日志-->
      <!--此时MaxSizeRollBackups和maximumFileSize的节点设置没有意义-->
      <!--<rollingStyle value="Date"/>-->
      <!--变换的形式为日志大小-->
      <!--这种情况下MaxSizeRollBackups和maximumFileSize的节点设置才有意义-->
      <RollingStyle value="Size"/>
      <!--<RollingStyle value="Composite"/>-->

      <!--每天记录的日志文件个数，与maximumFileSize配合使用-->
      <MaxSizeRollBackups value="10"/>

      <!--每个日志文件的最大大小-->
      <!--可用的单位:KB|MB|GB-->
      <!--不要使用小数,否则会一直写入当前日志-->
      <maximumFileSize value="2MB"/>

      <!--日志格式-->
      <layout type="log4net.Layout.PatternLayout">
        <!--
        <param name="Header" value="[Header]\r\n"/>
        <param name="Footer" value="[Footer]\r\n"/>
        -->
        <!--
        %m(message)：输出的日志消息，如ILog.Debug(…)输出的一条消息 
        %n(new line)：换行 
        %d(datetime)：输出当前语句运行的时刻 
        %r(run time)：输出程序从运行到执行到当前语句时消耗的毫秒数 
        %t(thread id)：当前语句所在的线程ID 
        %p(priority)：日志的当前优先级别，即DEBUG、INFO、WARN…等 
        %c(class)：当前日志对象的名称，例如： 
        %L(line)：输出语句所在的行号 
        %F(file)：输出语句所在的文件名 
        %-数字：表示该项的最小长度，如果不够，则用空格填充
        如下配置输出时间、文件、行号、线程ID、日志级别、信息、换行
        -->
        <param name="ConversionPattern" value="[%d] [%-5p] [ThreadID: %t] [File: %F] [Line: %L] %n %m%n"/>
      </layout>

      <!--
        配置日志记录范围，即仅记录LevelMin与LevelMax之间级别的日志
      -->
      <!--
      <filter type="log4net.Filter.LevelRangeFilter">
        <param name="LevelMin" value="ALL" />
        <param name="LevelMax" value="FATAL" />
      </filter>
      -->
    </appender>

    <!--
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender" >
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="[%d] [%-5p] [ThreadID: %t] [File: %F] [Line: %L] - %m%n"/>
      </layout>
    </appender>
    -->

  </log4net>
</configuration>